/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "alpha.water.*"
    {
        nAlphaCorr      1;
        nAlphaSubCycles 1;
        cAlpha          0.1;

        MULESCorr       yes;
        nLimiterIter    3;

        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
    }

    "pcorr.*"
    {
        solver          PCG;
        preconditioner  FDIC;
        tolerance       1e-6;
        relTol          0;
        minIter         1000;          
    }

    p_rgh
    {
        solver GAMG;
        agglomerator faceAreaPair;
        cacheAgglomeration false;
        nCellsInCoarsestLevel 10;
        smoother GaussSeidel;
        tolerance       1e-5;
        relTol          0;
    }

    p_rghFinal
    {
        $p_rgh;
        tolerance       1e-8;
        relTol          0;      
    }

    "(U|k|epsilon|omega|Nb).*"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-6;
        relTol          0;
        minIter         3;
    }

    "(U|k|epsilon|omega|Nb)Final"
    {
        $U;
        tolerance       1e-8;        
        relTol          0;
        minIter         3;
    }
}

PIMPLE
{
    momentumPredictor   yes;
    nOuterCorrectors    1;
    nCorrectors         2;
    nNonOrthogonalCorrectors 1;
}


cache
{
    grad(U);
}

// ************************************************************************* //
